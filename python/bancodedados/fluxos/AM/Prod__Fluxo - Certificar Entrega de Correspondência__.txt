<?xml version="1.0" encoding="iso-8859-1"?><process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Fluxo - Certificar Entrega de Correspondência">
    <description><![CDATA[Versão 2.0 - Noite]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Unidade de Processamento">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('60:1338,60:5677,154:5948,154:5950,154:5483,154:1118,60:1118')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('84:1')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition name="Emitir certidão entrega de correspondência" to="Emitir certidão entrega de correspondência"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="Emitir certidão entrega de correspondência">
        <task name="Emitir certidão entrega de correspondência" priority="3" swimlane="Unidade de Processamento">
            <controller>
                <variable access="read,write" mapped-name="frame:Processo_Fluxo_expedientes_correios" name="Processo_Fluxo_expedientes_correios"/>
            </controller>
        </task>
        <transition name="Prosseguir" to="Término"/>
        <transition name="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência" to="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-start">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:aguardaCiencia', 'true')}" name="upd"/>
        </event>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Prosseguir')}" name="upd"/>
        </event>
        <event type="node-leave">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:aguardaCiencia')}" name="upd"/>
        </event>
    </task-node>
    <end-state name="Término">
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:tramitacao:sobAnalisePrevencao')}"/>
        </event>
    </end-state>
    <task-node end-tasks="true" name="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência">
        <task name="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência" priority="3" swimlane="Nó de Desvio - Fluxo - Certificar Entrega de Correspondência"/>
        <transition name="Término" to="Término"/>
        <transition name="Emitir certidão entrega de correspondência" to="Emitir certidão entrega de correspondência"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
