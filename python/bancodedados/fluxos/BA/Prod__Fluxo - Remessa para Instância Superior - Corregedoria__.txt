<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Fluxo - Remessa para Instância Superior - Corregedoria">
    <description><![CDATA[versão PRD Noite]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('84:1,84:1003')}"/>
    </swimlane>
    <swimlane name="Unidade de Corregedoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('23972:5948,23972:5950,23972:5483,23972:1118')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" priority="3"/>
        <transition to="Remeter ao TSE - Corregedoria" name="Remeter ao TSE - Corregedoria"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="Remeter ao TSE - Corregedoria">
        <task name="Remeter ao TSE - Corregedoria" swimlane="Unidade de Corregedoria" priority="3">
            <controller>
                <variable name="Intercomunicacao_RetificacaoAutuacao_updateRetificacaoAutuacao" mapped-name="frame:Intercomunicacao_RetificacaoAutuacao_updateRetificacaoAutuacao" access="read,write"/>
            </controller>
        </task>
        <transition to="Aguardando apreciação pela instância Superior - Corregedoria" name="Aguardando apreciação pela instância Superior - Corregedoria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria" name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Cancelar"/>
        <event type="task-start">
            <action name="upd" expression="#{taskInstanceUtil.setVariable('comboMotivoRemessa', '18;90,37,38,39,40')}"/>
        </event>
        <event type="task-create">
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('Aguardando apreciação pela instância Superior - Corregedoria')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="Aguardando apreciação pela instância Superior - Corregedoria">
        <task name="Aguardando apreciação pela instância Superior - Corregedoria" swimlane="Unidade de Corregedoria" priority="3">
            <controller/>
        </task>
        <transition to="Recebimento de instância Superior - Corregedoria" name="Recebimento de instância Superior - Corregedoria">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria" name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-start">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:aguardaInstanciaSuperior - Corregedoria',true)}"/>
        </event>
        <event type="task-create">
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('Recebimento de instância Superior - Corregedoria')}"/>
        </event>
        <event type="node-leave">
            <action name="upd" expression="#{org.jboss.seam.bpm.processInstance.contextInstance.deleteVariable('pje:aguardaInstanciaSuperior - Corregedoria')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="Recebimento de instância Superior - Corregedoria">
        <task name="Recebimento de instância Superior - Corregedoria" swimlane="Unidade de Corregedoria" priority="3">
            <controller/>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Término" name="Término"/>
        <transition to="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria" name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria">
        <task name="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria" swimlane="Nó de Desvio - Fluxo - Remessa para Instância Superior - Corregedoria" priority="3"/>
        <transition to="Remeter ao TSE - Corregedoria" name="Remeter ao TSE - Corregedoria"/>
        <transition to="Aguardando apreciação pela instância Superior - Corregedoria" name="Aguardando apreciação pela instância Superior - Corregedoria"/>
        <transition to="Recebimento de instância Superior - Corregedoria" name="Recebimento de instância Superior - Corregedoria"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
