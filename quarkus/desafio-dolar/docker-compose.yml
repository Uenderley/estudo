version: '3'

volumes:
    prometheus_data: {}
  #  grafana_data: {}

services:
  quarkus-build:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile
    depends_on:
      - mongo-express
      - mongo
    environment:
      DB_MONGO: mongodb://mongo:27017
      URL_JAEGER: http://jaeger:14268/api/traces
    ports:
      - "8080:8080"
    networks:
      - mongo-compose-network
  mongo:
    container_name: mongo
    image: mongo:latest
    environment:
      MONGODB_DATABASE: desafio
    ports:
      - "27017:27017"
      - "28017:28017"
    networks:
      - mongo-compose-network
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: '"true"'
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_AUTH_DATABASE: desafio
    depends_on:
      - mongo
    links:
      - mongo
    networks:
      - mongo-compose-network
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    networks:
      - mongo-compose-network
  prometheus:
    container_name: prometheus
    image: prom/prometheus  
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
    links:
      - quarkus-build:quarkus-build
    depends_on:
      - quarkus-build
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - mongo-compose-network
  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - mongo-compose-network
    restart: always
networks:
  mongo-compose-network:
    driver: bridge